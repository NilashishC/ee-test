apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: custom-ee-template
  title: Custom Execution Environment Template
  description: Create Ansible Execution Environment definition file (Custom)
  tags:
    - ansible
    - execution-environment
    - containers
    - automation
    - start-from-scratch
spec:
  owner: group:ansible-team
  type: tool

  parameters:
    # Step 1: Base Image Selection
    - title: Base Image
      description: Configure the base image for your execution environment
      properties:
        baseImage:
          title: Base execution environment image
          type: string
          default: 'registry.access.redhat.com/ubi9/python-311:latest'
          enum:
            - 'registry.access.redhat.com/ubi9/python-311:latest'
            - 'registry.redhat.io/ansible-automation-platform-25/ee-minimal-rhel9:latest'
            - 'custom'
          enumNames:
            - 'Red Hat Universal Base Image 9 w/ Python 3.11 (Recommended)'
            - 'Red Hat Ansible Minimal EE base (RHEL 9) (Requires subscription)'
            - 'Custom Image'
          ui:widget: radio
      dependencies:
        baseImage:
          oneOf:
            # Case 1: When "Custom Image" is selected
            - properties:
                baseImage:
                  const: 'custom'
                customBaseImage:
                  title: Custom Base Image
                  type: string
                  description: Enter a custom execution environment base image
                  ui:
                    field: EntityNamePicker
                    options:
                    allowArbitraryValues: true
                    help: 'Format: [registry[:port]/][namespace/]name[:tag]'
                    placeholder: 'e.g., quay.io/org/custom-ee:latest'
              required:
                - customBaseImage

            # Case 2: When any predefined base image is selected
            - properties:
                baseImage:
                  not:
                    const: 'custom'

    # Step 2: Ansible Collections
    - title: Collections
      description: Add collections to be included in your execution environment definition file (optional).
      properties:
        popularCollections:
          title: Add Popular Collections
          type: array
          items:
            type: string
            enum:
              - 'ansible.posix'
              - 'community.general'
              - 'community.crypto'
              - 'ansible.windows'
              - 'community.kubernetes'
              - 'community.docker'
              - 'cisco.ios'
              - 'arista.eos'
              - 'amazon.aws'
              - 'azure.azcollection'
              - 'google.cloud'
          uniqueItems: true
          ui:widget: checkboxes
          ui:options:
            layout: horizontal
        collections:
          title: Ansible Collections
          type: array
          description: Add collections manually
          items:
            type: object
            properties:
              name:
                type: string
                title: Collection Name
                description: Collection name in namespace.collection format
                pattern: '^[a-zA-Z0-9_]+\.[a-zA-Z0-9_]+$'
                ui:placeholder: 'e.g., community.general'
              version:
                type: string
                title: Version (Optional)
                description: Specific version of the collection
                ui:placeholder: 'e.g., 7.2.1'
          ui:options:
            addable: true
            orderable: true
            removable: true
        collectionsFile:
          title: Upload a requirements.yml file
          description: Optionally upload a requirements file with collection details
          type: string
          format: data-url
        specifyRequirements:
          title: Specify additional Python requirements and System packages
          type: boolean
          default: false
          ui:help: "Check this box to define additional Python or system dependencies to include in your EE."
      dependencies:
        specifyRequirements:
          oneOf:
            - properties:
                specifyRequirements:
                  const: true
                pythonRequirements:
                  title: Python Requirements
                  type: array
                  description: Add Python requirements to be included in the execution environment definition file (optional).
                  items:
                    type: string
                    title: Python package
                    description: Python package (with optional version specification)
                    ui:placeholder: 'e.g., requests>=2.28.0'
                  ui:options:
                    addable: true
                    orderable: true
                    removable: true
                pythonRequirementsFile:
                  type: string
                  format: data-url
                  title: Pick a file with Python requirements
                  description: Upload a requirements.txt file with python package details
                systemPackages:
                  title: System Packages
                  type: array
                  description: Add system packages/binaries to be included in the execution environment definition file (optional).
                  items:
                    type: string
                    title: System package
                    description: System package
                    ui:placeholder: 'e.g., libxml2-dev [platform:dpkg], libssh-devel [platform:rpm]'
                  ui:options:
                    addable: true
                    orderable: true
                    removable: true
                systemPackagesFile:
                  type: string
                  format: data-url
                  title: Pick a file with system packages
                  description: Upload a bindep.txt file with system package details
            - properties:
                specifyRequirements:
                  const: false

    - title: MCP servers
      description: Add MCP servers to be installed in the execution environment definition file (optional).
      properties:
        mcpServers:
          title: MCP Servers
          type: array
          items:
            type: string
            title: MCP Server
            enum:
              - Github
              - AWS
              - Azure
            ui:widget: select
            ui:help: "Update placeholder values within the YAML file once the EE definition file is created."
          ui:options:
            addable: true
            orderable: true
            removable: true
      dependencies:
        mcpServers:
          oneOf:
            # Case: at least one item selected
            - properties:
                mcpServers:
                  minItems: 1
              ui:help: 
            # Case: no selection yet
            - properties:
                mcpServers:
                  maxItems: 0
              ui:help: ""

    # Step 3: Additional Build Steps
    - title: Additional Build Steps
      description: Add custom build steps that will be executed at specific points during the build process. These map to ansible-builder's additional_build_steps configuration.
      properties:
        additionalBuildSteps:
          title: Additional Build Steps
          type: array
          items:
            type: object
            properties:
              stepType:
                title: Step Type
                type: string
                description: When this build step should execute
                enum:
                  - 'prepend_base'
                  - 'append_base'
                  - 'prepend_galaxy'
                  - 'append_galaxy'
                  - 'prepend_builder'
                  - 'append_builder'
                  - 'prepend_final'
                  - 'append_final'
                enumNames:
                  - 'Prepend Base - Before base image dependencies'
                  - 'Append Base - After base image dependencies'
                  - 'Prepend Galaxy - Before Ansible collections'
                  - 'Append Galaxy - After Ansible collections'
                  - 'Prepend Builder - Before main build steps'
                  - 'Append Builder - After main build steps'
                  - 'Prepend Final - Before final image steps'
                  - 'Append Final - After final image steps'
                default: 'prepend_base'
              commands:
                title: Commands
                type: array
                description: List of commands to execute
                items:
                  type: string
                  title: Command
                  ui:placeholder: 'e.g., RUN dnf update'
                ui:options:
                  addable: true
                  orderable: true
                  removable: true
            required: ['id', 'stepType', 'commands']
          ui:options:
            addable: true
            orderable: true
            removable: true

    # Step 9: Repository Configuration
    - title: Generate (and Publish)
      description: Generate and publish the EE definition file and template.
      properties:
        eeFileName:
          title: EE File Name
          type: string
          description: Name of the Execution Environment file.
          ui:help: "Specify the filename for the EE definition file."
        templateDescription:
          title: Template Description
          type: string
          description: Description for the generated template.
          ui:help: "Helps others understand when to use this template."
        tags:
          title: Tags for the generated template
          description: Enter one or more tags.
          type: array
          items:
            type: string
          ui:
            options:
              addable: true
              orderable: true
              removable: true
            help: "Add one or more tags for the generated template."
        publishToSCM:
          title: Publish to a SCM repository
          description: Publish the EE definition file and template to a SCM repository.
          type: boolean
          default: true
          ui:help: "If unchecked, the EE definition file and template will not be pushed to a SCM repository. Regardless of your selection, you will get a link to download the files locally."
      required:
        - eeFileName
        - templateDescription   
      dependencies:
        publishToSCM:
          oneOf:
            - properties:
                publishToSCM:
                  const: true
                sourceControlProvider:
                  title: Select source control provider
                  description: Choose your source control provider
                  type: string
                  enum:
                    - Github
                    - Gitlab
                  ui:
                    component: select
                    help: Select the source control provider to publish the EE definition files to.
                repositoryOwner:
                  title: SCM repository organization or username
                  type: string
                  description: The organization or username that owns the SCM repository
                repositoryName:
                  title: Repository Name
                  type: string
                  description: Specify the name of the repository where the EE definition files will be published.
                createNewRepository:
                  title: Create new repository
                  type: boolean
                  description: Create a new repository, if the specified one does not exist.
                  default: false
                  ui:help: "If unchecked, a new repository will not be created if the specified one does not exist. The generated files will not be published to a repository."
              required:
                - sourceControlProvider
                - repositoryOwner
                - repositoryName
                - createNewRepository
            - properties:
                publishToSCM:
                  const: false

  steps:
    # Step 1: Create EE definition files
    - id: create-ee-definition
      name: Create Execution Environment Definition
      action: ansible:ee:create-definition
      input:
        values:
          baseImage: ${{ parameters.baseImage === 'custom' and parameters.customBaseImage or parameters.baseImage }}
          popularCollections: ${{ parameters.popularCollections or [] }}
          collections: ${{ parameters.collections or [] }}
          collectionsFile: ${{ parameters.collectionsFile or [] }}
          pythonRequirements: ${{ parameters.pythonRequirements or [] }}
          pythonRequirementsFile: ${{ parameters.pythonRequirementsFile or [] }}
          systemPackages: ${{ parameters.systemPackages or [] }}
          systemPackagesFile: ${{ parameters.systemPackagesFile or [] }}
          mcpServers: ${{ parameters.mcpServers or [] }}
          additionalBuildSteps: ${{ parameters.additionalBuildSteps or [] }}

    # Step 2: Save as template
    - id: save-template
      name: Save as Reusable Template
      if: ${{ parameters.saveAsTemplate }}
      action: ansible:ee:save-template
      input:
        values:
          baseImage: ${{ parameters.baseImage === 'custom' and parameters.customBaseImage or parameters.baseImage }}
          popularCollections: ${{ parameters.popularCollections or [] }}
          collections: ${{ parameters.collections or [] }}
          collectionsFile: ${{ parameters.collectionsFile or [] }}
          pythonRequirements: ${{ parameters.pythonRequirements or [] }}
          pythonRequirementsFile: ${{ parameters.pythonRequirementsFile or [] }}
          systemPackages: ${{ parameters.systemPackages or [] }}
          systemPackagesFile: ${{ parameters.systemPackagesFile or [] }}
          mcpServers: ${{ parameters.mcpServers or [] }}
          additionalBuildSteps: ${{ parameters.additionalBuildSteps or [] }}

    # Step 3: Generate catalog-info.yaml file
    
    # Step 4: Register as catalog entity

    # Step 5: Publish to GitHub Repository (conditional)

  output:
    text:
      - title: 🎉 Execution Environment Definition Created Successfully!
        content: |
          Your Ansible Execution Environment Definition file has been generated and is ready to use.
